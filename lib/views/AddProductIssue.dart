import 'package:flutter/material.dart';
import 'package:vernicolorapp/models/ProductIssue.dart';

class AddProductIssue extends StatefulWidget {
  final int productId;

  const AddProductIssue({Key? key, required this.productId}) : super(key: key);

  @override
  _AddIssueFormState createState() => _AddIssueFormState();
}

class _AddIssueFormState extends State<AddProductIssue> {
  final _formKey = GlobalKey<FormState>();
  String issueType = '';
  String issueDescription = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Issue for Product ${widget.productId}'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Issue Type Input
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'Issue Type',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the issue type';
                  }
                  return null;
                },
                onChanged: (value) {
                  setState(() {
                    issueType = value;
                  });
                },
              ),
              SizedBox(height: 16),

              // Issue Description Input
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'Issue Description',
                  border: OutlineInputBorder(),
                ),
                maxLines: 3,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the issue description';
                  }
                  return null;
                },
                onChanged: (value) {
                  setState(() {
                    issueDescription = value;
                  });
                },
              ),
              SizedBox(height: 32),

              // Submit Button
              ElevatedButton(
                onPressed: () {
                  // Validate the form
                  if (_formKey.currentState!.validate()) {
                    // Create the ProductIssue object and handle submission
                    ProductIssue newIssue = ProductIssue(
                      id: 0, // assuming the ID is generated by the backend
                      type: issueType,
                      description: issueDescription,
                    );

                    // Handle submission logic here (e.g., API call to save the issue)
                    ScaffoldMessenger.of(context).showSnackBar(
                      SnackBar(
                        content: Text('Issue added successfully!'),
                      ),
                    );

                    // Optionally, navigate back or clear the form after submission
                    Navigator.pop(context, newIssue);
                  }
                },
                style: ElevatedButton.styleFrom(
                  minimumSize: Size(double.infinity, 50),
                ),
                child: Text('Submit Issue'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}



