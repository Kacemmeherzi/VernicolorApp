import 'package:flutter/material.dart';
import 'package:vernicolorapp/models/Customer.dart';
import 'package:vernicolorapp/services/CustomerService.dart';
// Import your customer model

class AddCustomerPage extends StatefulWidget {
  @override
  _AddCustomerPageState createState() => _AddCustomerPageState();
}

class _AddCustomerPageState extends State<AddCustomerPage> {
  final _formKey = GlobalKey<FormState>();
  final _nameController = TextEditingController();
  final _emailController = TextEditingController();
  final _serialNumberController = TextEditingController();
  late CustomerService _customerService;

  @override
  void initState() {
    super.initState();
    _customerService = CustomerService(); // Adjust URL
  }

  Future<void> _addCustomer() async {
 
    if (_formKey.currentState?.validate() ?? false) {
      final customer = Customer(
        id: 0, // ID will be generated by the backend
        customerName: _nameController.text,
        customerEmail: _emailController.text,
        customerSerialNumber: _serialNumberController.text,
      );

      try {
        await _customerService.createCustomer(customer);
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Customer added successfully'),backgroundColor: Colors.green,),
        );
      } catch (e) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Failed to add customer')),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Customer'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _nameController,
                decoration: InputDecoration(labelText: 'Name'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the customer name';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _emailController,
                decoration: InputDecoration(labelText: 'Email'),
                keyboardType: TextInputType.emailAddress,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the customer email';
                  } else if (!RegExp(r'\S+@\S+\.\S+').hasMatch(value)) {
                    return 'Please enter a valid email address';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _serialNumberController,
                decoration: InputDecoration(labelText: 'Serial Number'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the serial number';
                  }
                  return null;
                },
              ),
              SizedBox(height: 20),
              ElevatedButton.icon(
                 label: Text("Add Product"),
                icon:  Icon(Icons.add),
                style: ElevatedButton.styleFrom(
                 
                  minimumSize:Size(double.infinity, 10) ,
                  padding: EdgeInsets.symmetric(vertical: 25), // Button height
                  textStyle: TextStyle(fontSize: 16),backgroundColor: Colors.green , 
                  foregroundColor: Colors.black
                ),
                onPressed: _addCustomer,
              ),
            ],
          ),
        ),
      ),
    );
  }
}
